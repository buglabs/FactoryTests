#!/bin/sh

# comment_block() {
#   ---------------------------------------------
#   Common settings
#   ---------------------------------------------
HOSTNAME=VIDEO-TEST
VERSION=1.0

hostname $HOSTNAME

#   ---------------------------------------------
#   Prints execution status.
#
#   arg1 : Execution status
#   arg2 : Continue (0) or Abort (1) on error
#   ---------------------------------------------
status ()
{
	if [ $1 -eq 0 ] ; then
		echo "[SUCCESS]"
	else
		echo "[FAILED]"

		if [ $2 -eq 1 ] ; then
			echo "... System init aborted."
			exit 1
		fi
	fi

}

#   ---------------------------------------------
#   Get verbose
#   ---------------------------------------------
echo ""
echo "    System initialization..."
echo ""
echo "    Hostname       : $HOSTNAME"
echo "    Filesystem     : v$VERSION"
echo ""
echo "    Kernel release : `uname -s` `uname -r`"
echo "    Kernel version : `uname -v`"
echo ""


#   ---------------------------------------------
#   MDEV Support
#   (Requires sysfs support in the kernel)
#   ---------------------------------------------
echo -n " Mounting /proc             : "
mount -n -t proc /proc /proc
status $? 1

echo -n " Mounting /sys              : "
mount -n -t sysfs sysfs /sys
status $? 1

echo -n " Mounting /dev              : "
mount -n -t tmpfs mdev /dev
status $? 1

echo -n " Mounting /dev/pts          : "
mkdir /dev/pts
mount -t devpts devpts /dev/pts
status $? 1

echo -n " Enabling hot-plug          : "
echo "/sbin/mdev" > /proc/sys/kernel/hotplug
status $? 0

echo -n " Populating /dev            : "
#mkdir -p /dev/input
#mkdir -p /dev/snd
#mkdir -p /dev/shm
/etc/init.d/udev start
mdev -s
status $? 0


#   ---------------------------------------------
#   Mount the default file systems
#   ---------------------------------------------
echo -n " Mounting other filesystems : "
mount -a
status $? 0
umount /media/mm*

#   ---------------------------------------------
#   Set PATH
#   ---------------------------------------------
export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin

# end comment block}

#   ---------------------------------------------
#   Done!
#   ---------------------------------------------
echo ""
echo "System initialization complete."

#mount -t vfat /dev/mmcblk0p1 /mnt/mmc1
#mount -t vfat /dev/mmcblk1p1 /mnt/mmc2

#echo "----------------------------------------"
#echo "    Making device nodes for EEPROMs"
#mknod /dev/at24c_eeprom c 249 0
#mknod /dev/at25_eeprom c 250 0
#echo "----------------------------------------"
#echo "          Disabling FB Timeout."
#echo "----------------------------------------"
#echo 0 > /sys/devices/platform/omapfb/sleep_timeout


prompt()
{
	tvar=L
	while [ "$tvar" != "y" ] &&
		[ "$tvar" != "Y" ] &&
		[ "$tvar" != "n" ] &&
		[ "$tvar" != "N" ] &&
		[ "$tvar" != "r" ] &&
		[ "$tvar" != "R" ]; do

	read -n1 tvar

done
export $1=$tvar
}
# main while loop
shutcheck() {

	if [ ! -e /sys/devices/platform/omap_bmi_slot.1/bmi/bmi-1/bmi-dev-1/vmode ]; then
		if [ -e /sys/class/leds ]; then 
			cd /sys/class/leds
			for la in *
			do
				echo none > $la/trigger
				echo 0 > $la/brightness
			done
		fi
		echo 255 > "/sys/class/leds/omap3bug:red:battery/brightness"
		echo 255 > "/sys/class/leds/omap3bug:red:wifi/brightness"
		shutdown -h -P now
	fi
}
if [ ! -e /sys/devices/platform/omap_bmi_slot.1/bmi/bmi-1/bmi-dev-1/vmode ]; then
	echo ==================================================================
	echo Video Module Not Detected.
	echo
	echo The video module has to be plugged in before the base is booted up
	echo Try reseating the Video module and press Enter to restart the base
	echo ==================================================================
	# sparkletron warning system
	for la in /sys/class/leds/*; do
		echo heartbeat > $la/trigger
		sleep .03
	done
	dd if=/dev/input/user_button of=foo count=2
	reboot
fi
echo 255 > "/sys/class/leds/omap3bug:green:wifi/brightness"
while [ 1 ]
do

	echo ===========================================================
	echo Testing HDMI / DVI output
	echo ===========================================================
	echo dvi > /sys/devices/platform/omap_bmi_slot.1/bmi/bmi-1/bmi-dev-1/vmode
	cp /usr/images/canyon.raw /dev/fb0
	sleep 5
		shutcheck
	echo ===========================================================
	echo Running FB random pattern
	echo ===========================================================
	for la in /usr/images/*; do 
		cp $la /dev/fb0; 
		sleep 2
		shutcheck
	done
	echo ===========================================================
	echo Switching to VGA mode
	echo ===========================================================
	echo vga > /sys/devices/platform/omap_bmi_slot.1/bmi/bmi-1/bmi-dev-1/vmode
	sleep 3
		shutcheck
	echo ===========================================================
	echo running image display
	echo ===========================================================
	for la in /usr/images/*; do 
		cp $la /dev/fb0; 
		sleep 2
		shutcheck
#		echo 255 > "/sys/class/leds/omap3bug:green:wifi/brightness"
#		dd if=/dev/input/user_button of=foo count=2
#		echo 0 > "/sys/class/leds/omap3bug:green:wifi/brightness"
	done
done

